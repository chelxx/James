<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2006-2014 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
// generate coupon
function grabCode() {
  // Get the rule in question
  $rule = Mage::getModel('salesrule/rule')->load(92); //ID of coupon in question

  // Define a coupon code generator model instance
  // Look at Mage_SalesRule_Model_Coupon_Massgenerator for options
  $generator = Mage::getModel('salesrule/coupon_massgenerator');

  $parameters = array(
      'count'=>5,
      'format'=>'alphanumeric',
      'dash_every_x_characters'=>4,
      'prefix'=>'ABCD-EFGH-',
      'suffix'=>'-WXYZ',
      'length'=>8
  );

  if( !empty($parameters['format']) ){
    switch( strtolower($parameters['format']) ){
      case 'alphanumeric':
      case 'alphanum':
        $generator->setFormat( Mage_SalesRule_Helper_Coupon::COUPON_FORMAT_ALPHANUMERIC );
        break;
      case 'alphabetical':
      case 'alpha':
        $generator->setFormat( Mage_SalesRule_Helper_Coupon::COUPON_FORMAT_ALPHABETICAL );
        break;
      case 'numeric':
      case 'num':
        $generator->setFormat( Mage_SalesRule_Helper_Coupon::COUPON_FORMAT_NUMERIC );
        break;
    }
  }

  $generator->setDash( !empty($parameters['dash_every_x_characters'])? (int) $parameters['dash_every_x_characters'] : 0);
  $generator->setLength( !empty($parameters['length'])? (int) $parameters['length'] : 6);
  $generator->setPrefix( !empty($parameters['prefix'])? $parameters['prefix'] : '');
  $generator->setSuffix( !empty($parameters['suffix'])? $parameters['suffix'] : '');

  // Set the generator, and coupon type so it's able to generate
  $rule->setCouponCodeGenerator($generator);
  $rule->setCouponType( Mage_SalesRule_Model_Rule::COUPON_TYPE_AUTO );

  $coupon = $rule->acquireCoupon();
  $coupon->setType(Mage_SalesRule_Helper_Coupon::COUPON_TYPE_SPECIFIC_AUTOGENERATED)->save();
  $code = $coupon->getCode();
  return $code;
}
function requestSample() {
    $firstName = $_REQUEST['firstName'];
    $lastName = $_REQUEST['lastName'];
    $email = $_REQUEST['email'];
    $address = $_REQUEST['address'];
    $city = $_REQUEST['city'];
    $state = $_REQUEST['state'];
    $zip = $_REQUEST['zip'];

    $logFileName = 'test.log';

    $billingAddress = array(
        'customer_address_id' => '',
        'prefix' => '',
        'firstname' => $firstName,
        'middlename' => '',
        'lastname' => $lastName,
        'suffix' => '',
        'company' => '', 
        'street' => array(
             '0' => $address, // compulsory
             '1' => '' // optional
         ),
        'city' => $city,
        'country_id' => 'US', // two letters country code
        'region' => $state, // can be empty '' if no region
        'region_id' => '', // can be empty '' if no region_id
        'postcode' => $zip,
        'telephone' => '',
        'fax' => '',
        'save_in_address_book' => 1
    );
    $shippingAddress = array(
        'customer_address_id' => '',
        'prefix' => '',
        'firstname' => $firstName,
        'middlename' => '',
        'lastname' => $lastName,
        'suffix' => '',
        'company' => '', 
        'street' => array(
             '0' => $address, // compulsory
             '1' => '' // optional
         ),
        'city' => $city,
        'country_id' => 'US', // two letters country code
        'region' => $state, // can be empty '' if no region
        'region_id' => '', // can be empty '' if no region_id
        'postcode' => $zip,
        'telephone' => '',
        'fax' => '',
        'save_in_address_book' => 1
    );

    $shippingMethod = 'freeshipping_freeshipping';
    $paymentMethod = 'free';

    // Array of your product ids and quantity
    $productIds = array(1259 => 1);

    $quote = Mage::getModel('sales/quote');
        // ->setStoreId()
    $quote->setCurrency(Mage::app()->getStore()->getBaseCurrencyCode());

    $customer = Mage::getModel('customer/customer');

    $customer->setWebsiteId(1)
        ->setStore($store)
        ->setFirstname($firstName)
        ->setLastname($lastName)
        ->setEmail($email);

    $quote->assignCustomer($customer);

    foreach($productIds as $productId => $qty) {
        $product = Mage::getModel('catalog/product')->load($productId);
        $quote->addProduct($product, $qty);
    }

    $billingAddressData = $quote->getBillingAddress()->addData($billingAddress);
    $shippingAddressData = $quote->getShippingAddress()->addData($shippingAddress);

    $shippingAddressData->setCollectShippingRates(true)
        ->collectShippingRates();
    
    $shippingAddressData->setShippingMethod($shippingMethod)
        ->setPaymentMethod($paymentMethod);
    
    $quote->getPayment()->importData(array('method' => $paymentMethod));

    try {
        $quote->collectTotals();
        $quote->save();

        $service = Mage::getModel('sales/service_quote', $quote);
        $service->submitAll();
        $incrementId = $service->getOrder()->getRealOrderId();

        Mage::getSingleton('checkout/session')
            ->getLastQuoteId($quote->getId())
            ->setLastSuccessQuoteId($quote->getId())
            ->clearHelperData();

        Mage::log('Order created with increment id: ' . $incrementId, null, $logFileName);

        $result['success'] = true;
        $result['error'] = false;

        Mage::app()->getResponse()
            ->setBody(Mage::helper('core')->jsonEncode($result))
            ->sendResponse();
    } catch (Mage_Core_Exception $e) {
        $result['success'] = false;
        $result['error'] = true;
        $result['error_messages'] = $e->getMessage();
        Mage::app()->getResponse()
            ->setBody(Mage::helper('core')->jsonEncode($result));
    } catch (Exception $e) {
        $result['success'] = false;
        $result['error'] = true;
        $result['error_messages'] = $this->__('There was an error processing your request. Please contact us or try again later.');
        Mage::app()->getResponse()
            ->setBody(Mage::helper('core')->jsonEncode($result));
        Mage::logException($e);
    }
}
function handleCaptcha() {
    $remoteip = $_SERVER['REMOTE_ADDR'];
    $response = $_REQUEST['grecaptcha'];

    $secret_file = fopen('./.secret', 'r') or die('Secret file is inaccessible or missing');
    $secret = fread($secret_file, filesize('./.secret'));
    fclose($secret_file);

    $params = array(
    'secret'    => $secret,
    'response'  => $response,
    'remoteip'  => $remoteip
    );

    $url = "https://www.google.com/recaptcha/api/siteverify";
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $params);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

    $json_response = curl_exec($ch);
    curl_close($ch);

    $google_response = json_decode($json_response);

    if ($google_response->success == true) {
        // $fscode = grabCode();
        // $to = 'tatan42@gmail.com';
        // $subject = 'dat sweet code';
        // $message = $fscode;
        // $headers = 'From:' . 'who@knows.notme';
        // mail($to, $subject, $message, $headers);
        // echo $fscode;

        if (isUniqueCustomer()) {
            // requestSample();
            // addToBatch();
            echo 'Thank you!';
            echo 'Your free sample is on its way.';
        } else {
            echo 'Sorry!';
            echo 'Only one sample per customer.';
        }
    } else {
        echo "Sorry!\nCould not verify captcha.";
    }


}
function isUniqueCustomer() {
    $email = str_replace(',', '', $_REQUEST['email']);
    $address = str_replace(',', '', $_REQUEST['address']);
    $city = str_replace(',', '', $_REQUEST['city']);
    $state = str_replace(',', '', $_REQUEST['state']);
    $zip = str_replace(',', '', $_REQUEST['zip']);

    $sample_log = fopen('./clinere-sample.log', 'r+') or die('Free Sample Log is inaccessible or missing');
    $unique = true;
    while (!feof($sample_log) && $unique) {
        $line = fgets($sample_log);
        $line_array = explode(',', $line);

        if ($email === $line_array[0]) {
            $unique = false;
        } else if ($address === $line_array[1] && $city === $line_array[2] && $state === $line_array[3] && $zip . "\n" === $line_array[4]) {
            $unique = false;
        }
    }
    if ($unique) {
        fwrite($sample_log, $email . ',' . $address . ',' . $city . ',' . $state . ',' . $zip . "\n");
        fclose($sample_log);
        return true;
    } else {
        fclose($sample_log);
        return false;
    }
}
// function addToBatch() {
//     $first = str_replace(',', '', strip_tags($_REQUEST['firstName']));
//     $last = str_replace(',', '', strip_tags($_REQUEST['lastName']));
//     $email = str_replace(',', '', strip_tags($_REQUEST['email']));
//     $address = str_replace(',', '', strip_tags($_REQUEST['address']));
//     $city = str_replace(',', '', strip_tags($_REQUEST['city']));
//     $state = str_replace(',', '', strip_tags($_REQUEST['state']));
//     $zip = str_replace(',', '', strip_tags($_REQUEST['zip']));

//     $batch = fopen('./clinere-sample-batch.csv', 'r+') or die('Free Sample Batch file is inaccessible or missing');
//     // while (!eof($batch)) {
//     //     $line = fgets($batch);
//     // }
//     fwrite($batch, $first . ',', $last . ',', $email . ',' . $address . ',' . $city . ',' . $state . ',' . $zip . "\n");
//     fclose($batch);
// }

// form handler
if ($_REQUEST['free_sample'] == '1') {
  handleCaptcha();
  exit;
}

?>
<meta http-equiv="Content-Type" content="<?php echo $this->getContentType() ?>" />
<title><?php echo $this->getTitle() ?></title>
<meta name="description" content="<?php echo htmlspecialchars($this->getDescription()) ?>" />
<meta name="keywords" content="<?php echo htmlspecialchars($this->getKeywords()) ?>" />
<meta name="robots" content="<?php echo htmlspecialchars($this->getRobots()) ?>" />
<link rel="icon" href="<?php echo $this->getFaviconFile(); ?>" type="image/x-icon" />
<link rel="shortcut icon" href="<?php echo $this->getFaviconFile(); ?>" type="image/x-icon" />
<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
<?php $disableResponsive = Mage::helper('em0121settings')->getGeneral_DisableResponsive(); ?>
<?php if(!$disableResponsive):?>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<?php endif;?>

<!--[if lt IE 7]>
<script type="text/javascript">
//<![CDATA[
    var BLANK_URL = '<?php echo $this->helper('core/js')->getJsUrl('blank.html') ?>';
    var BLANK_IMG = '<?php echo $this->helper('core/js')->getJsUrl('spacer.gif') ?>';
//]]>
</script>
<![endif]-->
<link href='https://fonts.googleapis.com/css?family=Khand' rel='stylesheet' type='text/css'>
<?php echo $this->getCssJsHtml() ?>
<link rel="stylesheet" type="text/css" href="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_SKIN); ?>frontend/default/clinere/css/clinere.css">
<link href="https://fonts.googleapis.com/css?family=Fira+Sans:100,300,400,400i,700" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Shrikhand" rel="stylesheet">
<?php echo $this->getChildHtml() ?>
<?php echo $this->helper('core/js')->getTranslatorScript() ?>
<?php echo $this->getIncludes() ?>

<!-- <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" rel="stylesheet" /> -->
<!-- <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm" crossorigin="anonymous"></script> -->
<link href="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_SKIN); ?>frontend/default/clinere/scripts/bstrap.min.css" rel="stylesheet" type="text/css">
<script src="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_SKIN); ?>frontend/default/clinere/scripts/bstrap.min.js"></script>


<!-- <script src="https://code.jquery.com/jquery-1.12.4.js"></script> -->
<!-- <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script> -->
<script src="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_SKIN); ?>frontend/default/clinere/scripts/jakequery-ui.js"></script>
<script type="text/javascript">
jQuery(document).ready(
    function () {
        jQuery("#faq-questions").accordion({
            header: "h1",
            collapsible: true,
            active: false,
            autoHeight: false,
            heightStyle: "content"
        });
        jQuery("#tabs").tabs();
        jQuery("#gallery").tabs();
    }
)
</script>